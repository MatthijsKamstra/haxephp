<?php

// Generated by Haxe 3.4.4
class haxe_rtti_Meta {
	public function __construct(){}
	static function getType($t) {
		$meta = haxe_rtti_Meta::getMeta($t);
		$tmp = null;
		if($meta !== null) {
			$tmp = _hx_field($meta, "obj") === null;
		} else {
			$tmp = true;
		}
		if($tmp) {
			return _hx_anonymous(array());
		} else {
			return $meta->obj;
		}
	}
	static function isInterface($t) {
		return $t instanceof _hx_interface;
	}
	static function getMeta($t) {
		$t->__ensureMeta__();
		$ret = Reflect::field($t, "__meta__");
		$tmp = null;
		if($ret === null) {
			$tmp = Std::is($t, _hx_qtype("Class"));
		} else {
			$tmp = false;
		}
		if($tmp) {
			if(haxe_rtti_Meta::isInterface($t)) {
				$name = Type::getClassName($t);
				$cls = Type::resolveClass(_hx_string_or_null($name) . "_HxMeta");
				if($cls !== null) {
					return Reflect::field($cls, "__meta__");
				}
			}
		}
		return $ret;
	}
	static function getFields($t) {
		$meta = haxe_rtti_Meta::getMeta($t);
		$tmp = null;
		if($meta !== null) {
			$tmp = _hx_field($meta, "fields") === null;
		} else {
			$tmp = true;
		}
		if($tmp) {
			return _hx_anonymous(array());
		} else {
			return $meta->fields;
		}
	}
	function __toString() { return 'haxe.rtti.Meta'; }
}
